# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  testConfiguration: 'Release'
  testCatalog: $(db_catalog)_test

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: AzurePowerShell@4
      inputs:
        azurePowerShellVersion: latestVersion
        azureSubscription: $(azure_subscription)
        scriptType: filePath
        scriptPath: '$(Build.SourcesDirectory)\azure\createArtifact.ps1'
        scriptArguments:
          -projectLocation $(Build.SourcesDirectory)
- stage: Unit
  dependsOn: Build
  jobs:
  - job: UnitTests
    steps:
    - task: AzurePowerShell@4
      inputs:
        azurePowerShellVersion: latestVersion
        azureSubscription: $(azure_subscription)
        scriptType: filePath
        scriptPath: '$(Build.SourcesDirectory)\azure\runTests.ps1'
        scriptArguments:
          -projectLocation '$(Build.SourcesDirectory)' `
          -type Unit `
          -dbCatalog '$(testCatalog)' `
          -dbUsername '$(db_username)' `
          -dbPassword '$(db_password)' `
          -dbSource '$(db_source)' `
          -useEnvironmentConnectionString true
- stage: Integration
  dependsOn: Unit
  jobs:
  - job: IntegrationTests
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 3.1.103
        installationPath: $(Agent.ToolsDirectory)/dotnet
    - task: AzurePowerShell@4
      inputs:
        azurePowerShellVersion: latestVersion
        azureSubscription: $(azure_subscription)
        scriptType: filePath
        scriptPath: '$(Build.SourcesDirectory)\azure\runTests.ps1'
        scriptArguments:
          -projectLocation $(Build.SourcesDirectory) `
          -type Integration `
          -TheMovieDatabaseKey $(TheMovieDatabaseAuthorization) `
          -dbCatalog '$(testCatalog)' `
          -dbUsername '$(db_username)' `
          -dbPassword '$(db_password)' `
          -dbSource '$(db_source)' `
          -useEnvironmentConnectionString true
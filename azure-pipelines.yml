# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  testConfiguration: 'Release'
  testCatalog: $(db_catalog)_test

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: build
        arguments: '--configuration $(buildConfiguration)'
        projects: |
          source/main/Grains/Grains.csproj
          source/main/GrainsInterfaces/GrainsInterfaces.csproj
          source/main/Silo/Silo.csproj
          source/main/VideoCatalogueClient/VideoCatalogueClient.csproj
- stage: Unit
  dependsOn: Build
  jobs:
  - job: UnitTests
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: test
        arguments: '--configuration $(testConfiguration) --collect "XPlat Code Coverage" --settings $(System.DefaultWorkingDirectory)/coverlet.runsettings'
        projects: |
          source/test/Grains.Tests.Unit/Grains.Tests.Unit.csproj
          source/test/VideoCatalogueClient.Tests.Unit/VideoCatalogueClient.Tests.Unit.csproj
    - task: DotNetCoreCLI@2
      inputs:
        command: custom
        custom: tool
        arguments: install --tool-path . dotnet-reportgenerator-globaltool
      displayName: Install ReportGenerator tool
      
    - script: ./reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
      displayName: Create reports
      
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage'
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml 
- stage: Integration
  dependsOn: Unit
  jobs:
  - job: IntegrationTests
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 3.1.103
        installationPath: $(Agent.ToolsDirectory)/dotnet
    - task: DotNetCoreCLI@2
      inputs:
        command: test
        arguments: '--configuration $(testConfiguration) --collect "XPlat Code Coverage" --settings $(System.DefaultWorkingDirectory)/coverlet.runsettings'
        projects: |
          source/test/Grains.Tests.Integration/Grains.Tests.Integration.csproj
          source/test/VideoCatalogueClient.Tests.Integration/VideoCatalogueClient.Tests.Integration.csproj
    - task: DotNetCoreCLI@2
      inputs:
        command: custom
        custom: tool
        arguments: install --tool-path . dotnet-reportgenerator-globaltool
      displayName: Install ReportGenerator tool
      
    - script: ./reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
      displayName: Create reports
      
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage'
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml 